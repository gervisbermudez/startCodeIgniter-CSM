Vue.component("createContents", {
  template: `
        <div class="panel">
			<div class="title">
				<h5>Contenidos Creados</h5>
                <a data-position="left" data-delay="50" data-tooltip="Crear contenido" 
                    class='tooltipped dropdown-trigger btn right btn-floating halfway-fab waves-effect waves-light'
					href='#!' data-target='dropdown2'><i class="large material-icons">add</i></a>
				<ul id='dropdown2' class='dropdown-content'>
					<li v-for="(item, index) in forms_types" :key="index"><a
						:href="getFormsTypeUrl(item)">{{item.form_name}}</a></li>
				</ul>
			</div>
			<div class="content row">
				<div class="col s4" v-for="(item, index) in content" :key="index">
					<p>
						{{item.form_name}} <br>
						by {{item.username}}</p>
				</div>
			</div>
		</div>
    `,
  props: [],
  data: function () {
    return {
      debug: false,
      loader: false,
      forms_types: [],
      content: [],
    };
  },
  methods: {
    getDataFromServe() {
      var self = this;
      $.ajax({
        type: "GET",
        url: BASEURL + "admin/formularios/ajax_get_forms_types",
        data: {},
        dataType: "json",
        success: function (response) {
          console.log(response);
          self.forms_types = response.data;
        },
      });

      $.ajax({
        type: "GET",
        url: BASEURL + "admin/formularios/ajax_get_forms_data",
        data: {},
        dataType: "json",
        success: function (response) {
          console.log(response);
          self.content = response.data;
        },
      });
    },
    getFormsTypeUrl(formObject) {
      return BASEURL + "admin/formularios/addData/" + formObject.id;
    },
  },
  mounted: function () {
    this.$nextTick(function () {
      this.debug ? console.log("mounted: createContents") : null;
      //this.getDataFromServe();
    });
  },
});

Vue.component("pageCard", {
  template: "#page-card-template",
  props: ["page"],
  data: function () {
    return {
      debug: false,
    };
  },
  computed: {
    contentText: function () {
        var span = document.createElement('span');
        span.innerHTML = this.page.content;
      let text = span.textContent || span.innerText;
      return text.substring(0, 220) + '...';
    },
  },
  methods: {
    getUserAvatar: function(user_id) {
      return '/public/img/user1.jpg';
    },
    getPageFullPath: function(path) {
      if (this.page.status == 1) {
        return  BASEURL + path;
      }
      return  BASEURL + 'admin/paginas/editar/' + this.page.page_id;
    },
  },
  mounted: function () {
    this.$nextTick(function () {});
  },
});
Vue.component("usersCollection", {
  template: "#user-collection-template",
  props: ["users"],
  data: function () {
    return {
      debug: false,
    };
  },
  methods: {
    getUserAvatar(user) {
      if (user.user_data.avatar) {
        return (
          BASEURL +
          "public/img/profile/" +
          user.username +
          "/" +
          user.user_data.avatar
        );
      } else {
        return "https://materializecss.com/images/sample-1.jpg";
      }
    },
    getUserLink(user) {
      return BASEURL + "admin/usuarios/ver/" + user.user_id;
    },
  },
  mounted: function () {
    this.$nextTick(function () {
      this.debug ? console.log("mounted: usersCollection") : null;
    });
  },
});
var dashboardModule = new Vue({
  el: "#root",
  data: {
    loader: true,
    pages: [],
    users: [],
  },
  computed: {
    filterPages: function () {
      if (this.pages.length > 3) {
        return this.pages.slice(0, 3);
      }
      return this.pages;
    },
  },
  methods: {
    getPages: function () {
      var self = this;
      $.ajax({
        type: "GET",
        url: BASEURL + "api/v1/pages/",
        data: {},
        dataType: "json",
        success: function (response) {
          self.pages = response.data;
        },
        error: function (error) {
          console.error(error);
        },
      });
    },
    getUsers() {
      var self = this;
      $.ajax({
        type: "GET",
        url: BASEURL + "api/v1/users/",
        data: {},
        dataType: "json",
        success: function (response) {
          console.log(response);
          self.users = response.data;
        },
        error: function (error) {
          console.error(error);
        },
      });
    },
  },
  mounted: function () {
    this.$nextTick(function () {
      this.getPages();
      this.getUsers();
      setTimeout(() => {
        M.AutoInit();
        this.loader = false;
      }, 3000);
    });
  },
});
