class VueForm{fields=null;debug=!0;errors=[];valid=!1;patterns={name:/^[a-zA-ZáÁéÉíÍóÓúÚñÑ\s\'\´]*$/,email:/^[_a-zA-Z0-9-]+(\.[_a-zA-Z0-9-]+)*(\+[a-zA-Z0-9-]+)?@[a-zA-Z0-9]+[a-zA-Z0-9.-]+\.[a-zA-Z]{1,6}$/i,number:/^[0-9]*$/,date:/^([0-2][0-9]|(3)[0-1])(\/)(((0)[0-9])|((1)[0-2]))(\/)\d{4}$/,symbols:/[-!$%^&*()_+|~=`{}\[\]:";'<>?,.\/]/,username:/^[A-Za-z]*[A-Za-z][A-Za-z0-9-_]{5,}$/,alphanumeric:/^[a-z0-9]+$/i,password:/^(?=.*?[0-9])(?=.*?[A-Z])(?=.*?[#?!@$%^&*\-_]).{8,}$/};constructor(e){this.generateForm(e)}generateForm(e){if(e){this.fields=e;for(const t in e)this.fields[t]={value:e[t].value||null,required:e[t].required||!1,type:e[t].type||"text",length:e[t].length||0,valid:e[t].valid||!0,touched:!1,errorText:e[t].errorText||"",customPattern:e[t].customPattern||null,validateWith:null,maxLength:e[t].maxLength||null,minLength:e[t].minLength||null,readOnlyValue:null}}}validateField(e){return this.fields[e].touched=!0,this.fields[e].readOnlyValue&&this.fields[e].readOnlyValue==this.fields[e].value?(this.markFieldAsValid(e),this.fields[e].errorText="",!0):!!this.basicFieldValidation(e)&&(this.markFieldAsValid(e),this.fields[e].errorText="",!(this.fields[e].validateWith&&"function"==typeof this.fields[e].validateWith&&!this.fields[e].validateWith(e))||(this.markFieldAsInvalid(e),this.fields[e].errorText=this.getErrorText(e),!1))}basicFieldValidation(e){return this.fields[e].required&&!this.fields[e].value?(this.markFieldAsInvalid(e),this.fields[e].errorText="This field is required",!1):this.fields[e].minLength&&!this.minLength(this.fields[e].value,this.fields[e].minLength)?(this.markFieldAsInvalid(e),this.fields[e].errorText="Minlength required: "+this.fields[e].minLength,!1):this.fields[e].maxLength&&!this.maxLength(this.fields[e].value,this.fields[e].maxLength)?(this.markFieldAsInvalid(e),this.fields[e].errorText=this.fields[e].errorText="Maxlength required: "+this.fields[e].maxLength,!1):!!this.patternValidation(e)||(this.markFieldAsInvalid(e),!1)}validate(){this.errors=[];for(const e in this.fields)this.fields[e].touched=!0,this.fields[e].required&&this.validateField(e);return this.valid}patternValidation(e,t=0){var i=!0,s=this.fields[e];if(this.fields[e].customPattern)i=this.fields[e].customPattern.test(s.value);else switch(s.type){case"name":i=this.nameValidation(s.value,t),this.fields[e].errorText=i?"":"Only letters in this field";break;case"number":i=this.numValidation(s.value,t),this.fields[e].errorText=i?"":"Only numbers in this field";break;case"email":i=this.emailValidation(s.value),this.fields[e].errorText=i?"":"Email don`t have the correct format: example@domain.com";break;case"cuit":i=this.CUILValidation(s.value),this.fields[e].errorText=i?"":"Cuit don`t have the correct format: ##-########-#";break;case"date":i=this.dateValidation(s.value),this.fields[e].errorText=i?"":"Correct date format: YYYY-MM-DD";break;case"password":i=this.passwordValidator(s.value),this.fields[e].errorText=i?"":"Include a special character, number and at least one capital and lower letter";break;default:void 0!==this.patterns[s.type]?(i=this.patterns[s.type].test(s.value),this.fields[e].errorText=i?"":e.charAt(0).toUpperCase()+e.slice(1)+" is invalid"):i=!1}return i}getErrorText(e){return this.fields[e].valid?"":this.fields[e].errorText?this.fields[e].errorText:e.charAt(0).toUpperCase()+e.slice(1)+" is invalid"}CUILValidation(e){if(e){let t=0,i=(e=e.toString().replace(/-/g,"")).split(""),s=[5,4,3,2,7,6,5,4,3,2];if(e&&11==e.length){for(let e=0;e<=9;e++)t+=Number(i[e])*s[e];return t=11-t%11,(11==t?0:10==t?9:t)==Number(i[10])}return!1}return!1}minLength(e,t){return!(!e||e&&e.length<t)}passwordValidator(e){return this.patterns.password.test(e)}maxLength(e,t){return!(!e||e&&e.length>t)}emailValidation(e){return this.patterns.email.test(e)}nameValidation(e,t=1){return!(0==this.patterns.name.test(e)||!this.minLength(e,t))}dateValidation(e){return this.patterns.date.test(e)}numValidation(e,t=0){return!(0==this.patterns.number.test(e)||!this.minLength(e,t))}markFieldAsInvalid(e){this.fields[e].valid=!1,this.errors.push(e)}markFieldAsValid(e){this.fields[e].valid=!0;const t=this.errors.indexOf(e);t>-1&&this.errors.splice(t,1)}}